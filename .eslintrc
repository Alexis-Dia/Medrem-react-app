{
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "overrides": [
    {
      "files": ["*.tsx, *.ts"],
      "rules": {
        "@typescript-eslint/no-unused-vars": ["error", {
          "ignoreRestSiblings": true
        }],
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/member-delimiter-style": ["error", {
          "multiline": {
            "delimiter": "semi",
            "requireLast": true
          },
          "singleline": {
            "delimiter": "semi",
            "requireLast": false
          }
        }],
        "@typescript-eslint/explicit-module-boundary-types": "error",
      }
    }
  ],
  "rules": {
    "no-mixed-spaces-and-tabs": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-extra-parens": "off",
    "@typescript-eslint/no-empty-function": "off",
    //TODO remove it in the future (will be changed to error)
    "@typescript-eslint/ban-ts-comment": "warn",
    "semi": ["error", "always"],
    "no-debugger": "off",
    "no-console": ["error", {
      "allow": ["warn", "error"]
    }],
    "arrow-body-style": "off",
    "arrow-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "no-var": "error",
    "object-shorthand": ["error", "always", {
      "avoidQuotes": true,
      "avoidExplicitReturnArrows": true
    }],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": ["error", {
      "object": true,
      "array": false
    }],
    "prefer-template": "error",
    "no-template-curly-in-string": "error",
    "no-unreachable-loop": "error",
    "default-case": "error",
    "default-case-last": "error",
    "curly": ["error", "all"],
    "dot-notation": "error",
    "eqeqeq": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-param-reassign": "error",
    "no-undef-init": "error",
    "no-undefined": "error",
    "brace-style": ["error", "1tbs"],
    "camelcase": "error",
    "comma-dangle": ["error", "always-multiline"],
    "comma-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "block-spacing": ["error", "always"],
    "func-call-spacing": ["error", "never"],
    "implicit-arrow-linebreak": ["error", "beside"],
    "indent": ["error", 4, {
      "SwitchCase": 1
    }],
    "eol-last": ["error", "always"],
    "rest-spread-spacing": ["error", "never"],
    "template-curly-spacing": ["error", "never"],
    "key-spacing": "error",
    "keyword-spacing": "error",
    "multiline-ternary": ["error", "always-multiline"],
    "newline-per-chained-call": "error",
    "no-array-constructor": "error",
    "no-bitwise": "error",
    "no-continue": "error",
    "no-lonely-if": "error",
    "no-multiple-empty-lines": ["error", {
      "max": 1
    }],
    "no-negated-condition": "error",
    "no-trailing-spaces": "error",
    "no-unneeded-ternary": "error",
    "@typescript-eslint/no-magic-numbers": ["error", {
      "ignore": [-1, 0, 1],
      "ignoreReadonlyClassProperties": true,
      "ignoreEnums": true
    }],
    "arrow-parens": ["error", "always"],
    "no-useless-computed-key": "error",
    "no-multi-assign": "error",
    "no-whitespace-before-property": "error",
    "object-curly-spacing": ["error", "always"],
    "prefer-object-spread": "error",
    "space-before-blocks": ["error", {
      "functions": "always",
      "keywords": "always",
      "classes": "always"
    }],
    "no-extra-parens": "off",
    "quotes": ["error", "double"],
    "jsx-quotes": ["error", "prefer-double"],
    "no-useless-constructor": "warn",
    "no-duplicate-imports": "warn",
    //TODO maybe change to error in the future (conflict with arrow functions)
    "max-len": ["warn", {
      "code": 180
    }],
    "max-depth": ["error", {
      "max": 4
    }],
    "max-params": ["error", {
      "max": 7
    }],
    "max-statements-per-line": ["error", {
      "max": 1
    }],
    "no-mixed-operators": "error",
    "generator-star-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "yield-star-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "no-confusing-arrow": ["warn", { "allowParens": true }],

    "react/prop-types": "off",
    "react/no-access-state-in-setstate": "error",
    "react/no-adjacent-inline-elements": "error",
    "react/no-array-index-key": "error",
    "react/no-danger": "error",
    "react/button-has-type": "error",
    "react/no-did-mount-set-state": ["error", "disallow-in-func"],
    "react/no-did-update-set-state": ["error", "disallow-in-func"],
    "react/no-redundant-should-component-update": "error",
    "react/no-typos": "error",
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": ["error", "disallow-in-func"],
    "react/prefer-es6-class": "error",
    "react/prefer-read-only-props": "error",
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/state-in-constructor": "error",
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",

    "react/jsx-boolean-value": "error",
    "react/jsx-closing-bracket-location": "error",
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never"}],
    "react/jsx-curly-spacing": "error",
    "react/jsx-equals-spacing": "error",
    "react/jsx-first-prop-new-line": "error",
    "react/jsx-no-script-url": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-one-expression-per-line": ["error", { "allow": "literal" }],
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-tag-spacing": ["error", { "beforeSelfClosing": "always" }],
    "react/boolean-prop-naming": "error",
    "react/no-multi-comp": "error",
    "react/prefer-stateless-function": "error",
    "react/jsx-handler-names": "error",
    //TODO change to error after removing deprecated lifecycle methods
    "react/no-deprecated": "warn",
    "react/no-unsafe": "off"
  }
}
